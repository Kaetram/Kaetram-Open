name: Build App Artifacts

on: workflow_dispatch

jobs:
    build-android:
        defaults:
            run:
                shell: bash

        strategy:
            matrix:
                node-version: [20.x]

        name: Build android artifacts

        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Update Submodule
              run: git submodule update --init --recursive

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Enable Corepack
              run: corepack enable

            - name: Cache node_modules
              uses: actions/cache@v3
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                      ${{ runner.os }}-node-${{ matrix.node-version }}

            - name: Get Yarn cache directory
              id: yarn-cache
              run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

            - name: Cache Yarn folder
              uses: actions/cache@v3
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                      ${{ runner.os }}-yarn-${{ matrix.node-version }}

            - name: Cache Yarn install state
              uses: actions/cache@v3
              with:
                  path: ./.yarn/install-state.gz
                  key: ${{ runner.os }}-yarn-install-state-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-install-state-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
                      ${{ runner.os }}-yarn-install-state-${{ matrix.node-version }}

            - name: Install Dependencies
              run: yarn install

            - name: Install Java
              uses: actions/setup-java@v3
              with:
                  distribution: zulu
                  java-version: 17
                  architecture: x64
                  cache: gradle

            - name: Install Android SDK Tools
              run: |
                  echo y | $ANDROID_HOME/tools/bin/sdkmanager --sdk_root=$ANDROID_HOME --install 'platform-tools' 'build-tools;30.0.3' 'platforms;android-30' 'ndk;25.0.8775105'
                  echo NDK_HOME=$ANDROID_HOME/ndk/25.0.8775105 >> $GITHUB_ENV

            - name: Cache rustup
              uses: actions/cache@v3
              with:
                  path: ~/.rustup
                  key: ${{ runner.os }}-rustup

            - name: Install Rust Toolchain
              run: |
                  rustup set auto-self-update disable
                  rustup toolchain install stable --profile minimal --target x86_64-unknown-linux-gnu aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

            - name: Cache Rust project
              uses: Swatinem/rust-cache@v2
              with:
                  workspaces: ./pacakges/app

            - name: Install Prererequisites
              run: sudo apt install libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev

            - name: Install Tauri
              run: cargo install tauri-cli --version '^2.0.0-alpha.10'

            - name: Initialize Android Build
              run: cargo tauri android init

            - name: Write Key and Local Properties
              run: |
                  echo '${{ secrets.ANDROID_KEY }}' | base64 --decode > ./packages/app/gen/android/app/key.jks
                  echo '${{ secrets.ANDROID_LOCAL_PROPERTIES }}' > ./packages/app/gen/android/local.properties

            - name: Build Android App
              run: cargo tauri android build

            - name: Upload Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: android-artifacts
                  path: |
                      ./packages/app/gen/android/app/build/outputs/apk/**/*.apk
                      ./packages/app/gen/android/app/build/outputs/bundle/**/*.aab
